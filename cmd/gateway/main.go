// Package gateway is the HTTP gateway for AurChat.
// It spins up a Gin engine, registers all RESTful endpoints under /api/v1,
// and serves Swagger UI for interactive documentation.
package gateway

import (
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	// docs is generated by `swag init`; do NOT remove the blank import.
	_ "github.com/AurChatOrg/aurchat-server/docs"
)

// @title        AurChat Server
// @version      1.0
// @description  High-performance chat backend written in Go
// @host         localhost:8080
// @BasePath     /api/v1
func main() {
	// Create a Gin engine with Logger and Recovery middleware.
	r := gin.Default()

	// All business routes live under /api/v1 to match @BasePath.
	v1 := r.Group("/api/v1")
	{
		// Health-check endpoint.
		// @Summary     Ping
		// @Description Returns {"msg":"pong"} to verify the service is alive.
		// @Tags        system
		// @Accept      json
		// @Produce     json
		// @Success     200 {object} map[string]string
		// @Router      /ping [get]
		v1.GET("/ping", func(c *gin.Context) {
			c.JSON(200, gin.H{"msg": "pong"})
		})
	}

	// Expose Swagger UI at /api/v1/swagger/index.html.
	r.GET("/api/v1/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Start the server on 0.0.0.0:8080.
	if err := r.Run(":8080"); err != nil {
		panic(err)
	}
}
